type BaseInfo {
    id: Int!,
    type: Int!,
    code: String!,
    market: Int
}

type BaseInfoQuery {
    oneById(id: Int!): BaseInfo,
    many: [BaseInfo]
}

type BaseInfoMutation {
    add(type: Int!, code: String!, market: Int, name: String): Int
    remove(id: Int!): Int
}

type Query {
    BaseInfo: BaseInfoQuery
}

type Mutation {
    BaseInfo: BaseInfoMutation
}

# type Query {
#     # fetchBaseInfo(id: Int): BaseInfo,
#     BaseInfo:
#     baseInfos: [BaseInfo]
# }

# type Mutation {
#     addBaseInfo(type: Int!, code: String!, market: Int, name: String): Int
# }